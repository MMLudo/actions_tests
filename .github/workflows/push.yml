  
name: Publish if new versions in package.json
on:
  push:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          node-version: '10.x'
      - name: Compute publication status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run : |
          cd $GITHUB_WORKSPACE/package1
          yarn
          yarn add semver
          echo "//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}" > ~/.npmrc
          chmod 0600 ~/.npmrc
          packages=$(curl \
            -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: bearer ${GITHUB_TOKEN}" \
            --data '{ "query": "{ user(login: \"MMLudo\") { repository(name: \"actions_tests\") { packages(names: \"package1\" first:1) { edges { node { name latestVersion {version} } } } } } }" }' \
            https://api.github.com/graphql)
          currentVersion=$(echo "$packages" | jq -r .data.user.repository.packages.edges[0].node.latestVersion.version)
          echo "Current version currentVersion"
          echo "$packages"
          pushedVersion=$(cat $GITHUB_WORKSPACE/package1/package.json | jq -r .version)
          echo "Pushed version $pushedVersion"
          export SHOULD_PUBLISH=$($GITHUB_WORKSPACE/package1/node_modules/semver/bin/semver.js $pushedVersion -r ">$currentVersion")
          echo "::set-env name=SHOULD_PUBLISH::$SHOULD_PUBLISH"
          echo "::set-env name=pushedVersion::$pushedVersion"
          echo "Current Version $currentVersion"
          echo "Pushed Version $pushedVersion"
          echo "Should publish $SHOULD_PUBLISH"
      - name: Publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd $GITHUB_WORKSPACE/package1
          echo "Pushed Version $pushedVersion from publish run"
          echo "Should publish $SHOULD_PUBLISH from publish run"
        if: env.SHOULD_PUBLISH == env.pushedVersion